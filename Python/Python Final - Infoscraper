"""Infoscraper_Cloudfare_Bypass
By: Kishan Rajeev J
Python Programming 1 Final Project

This progam takes the name of a celebrity and uses AI to get the Twitter, Instagram and YouTube accounts. it then uses the URL/Handles of these accounts to
use Selenium Webviewer to scrape the amount of followers and their business email and phone number.

*I've commented only the first function 'instagramperplexity' because all of the functions are similar.

Describe something that surprised you as you worked on your project. - I was surprised that something like this was not that hard to do using AI, but without AI it would be a lot harder as there is no one place all of this information is already stored.
Describe any challenges you had this week. - I had a lot of trouble getting Selenium Webdriver to do exactly what I wanted.
Did anyone help you this week? Who and how? - Surya and Isaac both helped me by giving me new ideas and ideas to solve existing problems.
Choose an adjective that describes how you are feeling about your project. Explain why you chose this word. - Creative - I think this is a cretive idea and I have done it differently than something else that serves the same purpose.
If you had more time to work on this project, what would you add?  - I would add all of the outputs into a database so new lookups would take less time and also because there is no one database that holds all of this information so it would be helpful to certain people.
"""

#Imports
import os
import time
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
from msedge.selenium_tools import Edge, EdgeOptions
from selenium.webdriver.common.keys import Keys
import warnings
import re

#Input for the person we want to search for
global person_name
person_name = input('Enter the name of the person you want to search: ')
#Filtering out Depreciation Warnings
warnings.filterwarnings('ignore', category=DeprecationWarning)
#Flag to toggle between Headless mode for debugging
global Headless
Headless = False
#Driver Path
global driver_path
driver_path = "C:\\Users\\kisha\\Documents\\msedgedriver.exe"

#Function to get the Instagram handle of the person we want to search using AI
def instagramidperplexity():
    try:
        #Defining a global variable so i can access it from other functions
        global finalinstahandle
        #Options for the browser. I'm making the browser use my actual profile which is logged in to all of my accounts. This makes web scraping much easier
        edge_options = EdgeOptions()
        edge_options.use_chromium = True
        edge_options.add_argument("user-data-dir=C:\\Users\\kisha\\AppData\\Local\\Microsoft\\Edge\\ud1")
        edge_options.add_argument("--disable-dev-shm-usage")
        #This uses the previously declared Headless boolean to determine if the browser is run in Headless mode
        if Headless == True:
            edge_options.add_argument("--headless")  
        elif Headless == False:
            pass
        #Launching the browser
        driver = Edge(executable_path=driver_path, options=edge_options)
        #The prompt we are giving the Ai to get the Instagram handle properly.
        perplexityprompt = "Paste only the instagram handle without the @ please. Dont add any text to your answer. Just the handle. For "+person_name
        driver.get("https://www.perplexity.ai/")
        #Using webdriver wait instead of time.sleep() so I can get the data faster and I also don't have to guess how long everything will take
        wait = WebDriverWait(driver, 10)
        #Waits until the input box is present
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/textarea')))
        #Sends the input
        driver.find_element("xpath", '/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/textarea').send_keys(perplexityprompt)
        #Clicks the enter button
        driver.find_element("xpath", "/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/div/button").click()
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/main/div/div/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div[1]/div/div[2]/div[2]/div/div[1]/div')))
        #Using time.sleep here as webdriver.wait is unreliable as all of the text required is not generated instantly, but in --stream mode
        time.sleep(5)
        #Getting the generated handle.
        instahandleraw = driver.find_element("xpath", '/html/body/div/main/div/div/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div[1]/div/div[2]/div[2]/div/div[1]/div')
        instahandle = instahandleraw.text
        finalinstahandle = instahandle
        driver.quit()
    except:
        driver.quit()

#Function to get the Youtube URL of the person we want to search using AI
def youtubechannelperplexity():
    try:
        global finalinstahandle
        edge_options = EdgeOptions()
        edge_options.use_chromium = True
        edge_options.add_argument("user-data-dir=C:\\Users\\kisha\\AppData\\Local\\Microsoft\\Edge\\ud1")
        edge_options.add_argument("--disable-dev-shm-usage")
        if Headless == True:
            edge_options.add_argument("--headless")  
        elif Headless == False:
            pass  
        driver = Edge(executable_path=driver_path, options=edge_options)
        perplexityprompt = "Paste only the youtube channel url. Use /user/ not /c/ For: "+person_name
        driver.get("https://www.perplexity.ai/")
        wait = WebDriverWait(driver, 10)
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/textarea')))
        driver.find_element("xpath", '/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/textarea').send_keys(perplexityprompt)
        driver.find_element("xpath", "/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/div/button").click()
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/main/div/div/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div[1]/div/div[2]/div[2]/div/div[1]/div')))
        time.sleep(5)
        youtubeurlraw = driver.find_element("xpath", '/html/body/div/main/div/div/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div[1]/div/div[2]/div[2]/div/div[1]/div')
        youtubeurl = youtubeurlraw.text
        global finalyoutubeurl
        finalyoutubeurl = youtubeurl
        driver.quit()
    except:
        driver.quit()

#Function to get the Twitter URL of the person we want to search using AI
def twitteridperplexity():
    try:
        global finalinstahandle
        edge_options = EdgeOptions()
        edge_options.use_chromium = True
        edge_options.add_argument("user-data-dir=C:\\Users\\kisha\\AppData\\Local\\Microsoft\\Edge\\ud1")
        edge_options.add_argument("--disable-dev-shm-usage")
        if Headless == True:
            edge_options.add_argument("--headless")  
        elif Headless == False:
            pass  
        driver = Edge(executable_path=driver_path, options=edge_options)
        perplexityprompt = "Paste only the twitter account url. Include https For: "+person_name
        driver.get("https://www.perplexity.ai/")
        wait = WebDriverWait(driver, 10)
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/textarea')))
        driver.find_element("xpath", '/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/textarea').send_keys(perplexityprompt)
        driver.find_element("xpath", "/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/div/button").click()
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/main/div/div/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div[1]/div/div[2]/div[2]/div/div[1]/div')))
        time.sleep(5)
        twitteridraw = driver.find_element("xpath", '/html/body/div/main/div/div/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div[1]/div/div[2]/div[2]/div/div[1]/div')
        twitterid = twitteridraw.text
        global finaltwitterid
        finaltwitterid = twitterid
        driver.quit()
    except:
        driver.quit()

#Function to get the Business email and phone number of the person we want to search using AI
def emailandphoneperplexity():
    try:
        edge_options = EdgeOptions()
        edge_options.use_chromium = True
        edge_options.add_argument("user-data-dir=C:\\Users\\kisha\\AppData\\Local\\Microsoft\\Edge\\ud1")
        edge_options.add_argument("--disable-dev-shm-usage")
        if Headless == True:
            edge_options.add_argument("--headless")  
        elif Headless == False:
            pass  
        perplexityprompt = "Business Email and Phone number for the person i give you. Only answer with the both of these in this format. Email: Phone: Do not say anything else. Just the phone number and email. Person: "+person_name
        driver = Edge(executable_path=driver_path, options=edge_options)
        driver.get("https://www.perplexity.ai/")
        wait = WebDriverWait(driver, 10)
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/textarea')))
        driver.find_element("xpath", '/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/textarea').send_keys(perplexityprompt)
        driver.find_element("xpath", "/html/body/div/main/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div[1]/div/div/div/div/button").click()
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/main/div/div/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div[1]/div/div[2]/div[2]/div/div[1]/div')))
        time.sleep(5)
        emailandphoneraw = driver.find_element("xpath", '/html/body/div/main/div/div/div[2]/div/div/div[2]/div/div/div[2]/div/div/div/div[1]/div/div[2]/div[2]/div/div[1]/div')
        global finalemailandphone
        emailandphone = emailandphoneraw.text
        finalemailandphone = emailandphone
        driver.quit()
    except:
        driver.quit()

#Function to actually scrape the twitter followers
def twitter_followers_scraper():
    try:
        global twitter_followers
        edge_options = EdgeOptions()
        edge_options.use_chromium = True
        edge_options.add_argument("user-data-dir=C:\\Users\\kisha\\AppData\\Local\\Microsoft\\Edge\\ud1")
        edge_options.add_argument("--disable-dev-shm-usage")
        if Headless == True:
            edge_options.add_argument("--headless")  
        elif Headless == False:
            pass  
        driver = Edge(executable_path=driver_path, options=edge_options)
        driver.get(finaltwitterid)
        wait = WebDriverWait(driver, 10)
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/div/div/div[2]/main/div/div/div/div[1]/div/div[3]/div/div/div/div/div[2]/div[1]/div/div[1]/div/div/span/span[1]')))
        time.sleep(1)
        twitter_person_name = driver.find_element("xpath", '/html/body/div[1]/div/div/div[2]/main/div/div/div/div[1]/div/div[3]/div/div/div/div/div[2]/div[1]/div/div[1]/div/div/span/span[1]')
        final_twitter_name = twitter_person_name.text
        time.sleep(1) 
        twitter_followers = driver.find_element("xpath", '/html/body/div[1]/div/div/div[2]/main/div/div/div/div[1]/div/div[3]/div/div/div/div/div[5]/div[2]/a')
        final_twitter_followers = twitter_followers.text
        global texfiletwitter
        texfiletwitter = f'{final_twitter_name} has {final_twitter_followers} on Youtube'

        driver.quit()
    except:
        driver.quit()
        print('Twitter ID Not Found')

#Function to actually scrape the instagram followers
def instagram_followers_scraper():
    try:
        global twitter_followers
        edge_options = EdgeOptions()
        edge_options.use_chromium = True
        edge_options.add_argument("user-data-dir=C:\\Users\\kisha\\AppData\\Local\\Microsoft\\Edge\\ud1")
        edge_options.add_argument("--disable-dev-shm-usage")
        if Headless == True:
            edge_options.add_argument("--headless")  
        elif Headless == False:
            pass  
        driver = Edge(executable_path=driver_path, options=edge_options)
        driver.get('https://instagram.com/'+finalinstahandle)
        wait = WebDriverWait(driver, 10)
        time.sleep(3)
        instagram_person_name = driver.find_element("xpath", '/html/body/div[2]/div/div/div[2]/div/div/div/div[1]/div[1]/div[2]/div[2]/section/main/div/header/section/div[1]/a/h2')
        final_instagram_name = instagram_person_name.text
        time.sleep(1) 
        instagram_followers = driver.find_element("xpath", '/html/body/div[2]/div/div/div[2]/div/div/div/div[1]/div[1]/div[2]/div[2]/section/main/div/header/section/ul/li[2]/a')
        final_instagram_followers = instagram_followers.text
        global texfileinstagram
        texfileinstagram = f'{final_instagram_name} has {final_instagram_followers} on Instagram'

        driver.quit()
    except:
        driver.quit()
        print('Instagram Handle Not Found')

#Function to actually scrape the youtube subscribers
def youtube_followers_scraper():
    try:
        global youtube_followers
        edge_options = EdgeOptions()
        edge_options.use_chromium = True
        edge_options.add_argument("user-data-dir=C:\\Users\\kisha\\AppData\\Local\\Microsoft\\Edge\\ud1")
        edge_options.add_argument("--disable-dev-shm-usage")
        if Headless == True:
            edge_options.add_argument("--headless")  
        elif Headless == False:
            pass  
        driver = Edge(executable_path=driver_path, options=edge_options)
        driver.get(finalyoutubeurl)
        wait = WebDriverWait(driver, 10)
        wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/ytd-app/div[1]/ytd-page-manager/ytd-browse/div[3]/ytd-c4-tabbed-header-renderer/tp-yt-app-header-layout/div/tp-yt-app-header/div[2]/div[3]/div/div[1]/div/div[1]/ytd-channel-name/div/div/yt-formatted-string')))
        youtube_person_name = driver.find_element("xpath", '/html/body/ytd-app/div[1]/ytd-page-manager/ytd-browse/div[3]/ytd-c4-tabbed-header-renderer/tp-yt-app-header-layout/div/tp-yt-app-header/div[2]/div[3]/div/div[1]/div/div[1]/ytd-channel-name/div/div/yt-formatted-string')
        final_youtube_name = youtube_person_name.text
        time.sleep(1) 
        youtube_followers_box = driver.find_element("xpath", '/html/body/ytd-app/div[1]/ytd-page-manager/ytd-browse/div[3]/ytd-c4-tabbed-header-renderer/tp-yt-app-header-layout/div/tp-yt-app-header/div[2]/div[3]/div/div[1]/div/div[1]/yt-formatted-string[2]')
        youtube_followers = youtube_followers_box.text
        final_youtube_followers = youtube_followers
        global texfileyoutube
        texfileyoutube = f'{final_youtube_name} has {final_youtube_followers} on Youtube'

        driver.quit()
    except:
        driver.quit()
        print('Youtube URL Not Found')

#Function to save the scraped data to a .txt file
def textfile():

    # Open a text file in write mode
    with open(os.path.join('C:\\Users\\kisha\\Documents\\output', 'output.txt'), 'w') as f:

    # Print the input to the text file
        fileinput = f'Input: {person_name}\n'
        f.write(fileinput)
        f.write('\n')
        # Print the output to the text file
        fileoutput = f'Output: \n{texfiletwitter}\n{texfileinstagram}\n{texfileyoutube}\n{finalemailandphone}\n'
        f.write(fileoutput)
        # Close the text file
        f.close()

#The main function to call the other functions
def main():
    #Trying to not crash the program when something goes wrong by using try statements to call all the required functions
    instagram = True
    twitter = True
    youtube = True

    try:
        twitteridperplexity()
    except:
        twitter = False
        print('Twitter ID not found')
    time.sleep(1)

    try:
        instagramidperplexity()
    except:
        instagram = False
        print('Instagram ID not found')
    time.sleep(1)

    try:
        youtubechannelperplexity()
    except:
        youtube = False
        print('Youtube ID not found')

    time.sleep(1)   
    if twitter == True:
        try:
            twitter_followers_scraper()
        except:
            print('Twitter ID not found')
            pass
    time.sleep(1)

    if instagram == True:
        try:
            instagram_followers_scraper()
        except:
            print('Instagram ID not found')
            pass
    time.sleep(1)

    if youtube == True:
        try:
            youtube_followers_scraper()
        except:
            print('Youtube ID not found')
            pass
    time.sleep(1)

    emailandphoneperplexity()
    time.sleep(1)
    while True:
        outputdefinput = input('Do you want to output to a text file or paste the results? (file/paste/both)')
        if outputdefinput == 'file':
            #Printing the scraped data to the .txt file
            textfile()
            break
        elif outputdefinput == 'paste':
            #Printing out the scraped data
            print('Person: ', person_name)
            if twitter == True:
                print(texfiletwitter)
            if instagram == True:
                print(texfileinstagram)
            if youtube == True:
                print(texfileyoutube)
            print(finalemailandphone)
            break
        elif outputdefinput == 'both':
            #Printing and saving the scraped data to a .txt file
            print('Person : ', person_name)
            print('\n')
            if twitter == True:
                print(texfiletwitter)
            if instagram == True:
                print(texfileinstagram)
            if youtube == True:
                print(texfileyoutube)
            print(finalemailandphone)
            textfile()
            break
        else:
            #Error in case they don't input one of the accepted responses
            print('Please enter a valid input in all lowercase characters')
            continue


#Calling the main function
if __name__ == "__main__":
    main()
